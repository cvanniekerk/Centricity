// <auto-generated />
using System;
using Centricity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Centricity.Migrations
{
    [DbContext(typeof(CentricityContext))]
    partial class CentricityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Centricity.Models.Evidence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EvidenceType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StepId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.ToTable("Evidence");
                });

            modelBuilder.Entity("Centricity.Models.Flow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Flow");
                });

            modelBuilder.Entity("Centricity.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FlowId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FlowId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("Centricity.Models.JobStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("JobId")
                        .HasColumnType("integer");

                    b.Property<int>("StepId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("StepId");

                    b.ToTable("JobStep");
                });

            modelBuilder.Entity("Centricity.Models.JobStepEvidence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EvidenceType")
                        .HasColumnType("integer");

                    b.Property<int>("JobStepId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("JobStepId");

                    b.ToTable("JobStepEvidence");
                });

            modelBuilder.Entity("Centricity.Models.JobStepTransition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsEnd")
                        .HasColumnType("boolean");

                    b.Property<int>("JobStepId")
                        .HasColumnType("integer");

                    b.Property<int?>("JobStepToId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("JobStepId");

                    b.HasIndex("JobStepToId");

                    b.ToTable("JobStepTransition");
                });

            modelBuilder.Entity("Centricity.Models.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FlowId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Ordinal")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FlowId");

                    b.ToTable("Step");
                });

            modelBuilder.Entity("Centricity.Models.Transition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsEnd")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StepId")
                        .HasColumnType("integer");

                    b.Property<int?>("StepToId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.HasIndex("StepToId");

                    b.ToTable("Transition");
                });

            modelBuilder.Entity("Centricity.Models.Evidence", b =>
                {
                    b.HasOne("Centricity.Models.Step", "Step")
                        .WithMany("Evidence")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Step");
                });

            modelBuilder.Entity("Centricity.Models.Job", b =>
                {
                    b.HasOne("Centricity.Models.Flow", "Flow")
                        .WithMany()
                        .HasForeignKey("FlowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flow");
                });

            modelBuilder.Entity("Centricity.Models.JobStep", b =>
                {
                    b.HasOne("Centricity.Models.Job", "Job")
                        .WithMany("JobSteps")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Centricity.Models.Step", "Step")
                        .WithMany()
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("Centricity.Models.JobStepEvidence", b =>
                {
                    b.HasOne("Centricity.Models.JobStep", "JobStep")
                        .WithMany("Evidence")
                        .HasForeignKey("JobStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobStep");
                });

            modelBuilder.Entity("Centricity.Models.JobStepTransition", b =>
                {
                    b.HasOne("Centricity.Models.JobStep", "JobStep")
                        .WithMany("Transitions")
                        .HasForeignKey("JobStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Centricity.Models.JobStep", "JobStepTo")
                        .WithMany()
                        .HasForeignKey("JobStepToId");

                    b.Navigation("JobStep");

                    b.Navigation("JobStepTo");
                });

            modelBuilder.Entity("Centricity.Models.Step", b =>
                {
                    b.HasOne("Centricity.Models.Flow", "Flow")
                        .WithMany("Steps")
                        .HasForeignKey("FlowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flow");
                });

            modelBuilder.Entity("Centricity.Models.Transition", b =>
                {
                    b.HasOne("Centricity.Models.Step", "Step")
                        .WithMany("Transitions")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Centricity.Models.Step", "StepTo")
                        .WithMany()
                        .HasForeignKey("StepToId");

                    b.Navigation("Step");

                    b.Navigation("StepTo");
                });

            modelBuilder.Entity("Centricity.Models.Flow", b =>
                {
                    b.Navigation("Steps");
                });

            modelBuilder.Entity("Centricity.Models.Job", b =>
                {
                    b.Navigation("JobSteps");
                });

            modelBuilder.Entity("Centricity.Models.JobStep", b =>
                {
                    b.Navigation("Evidence");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("Centricity.Models.Step", b =>
                {
                    b.Navigation("Evidence");

                    b.Navigation("Transitions");
                });
#pragma warning restore 612, 618
        }
    }
}
