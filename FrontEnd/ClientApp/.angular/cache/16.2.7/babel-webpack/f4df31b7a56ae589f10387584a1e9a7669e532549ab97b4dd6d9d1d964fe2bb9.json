{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet JobComponent = class JobComponent {\n  constructor(http, apiUrl, router, route) {\n    this.router = router;\n    this.route = route;\n    this.jobStepIndex = 0;\n    var flowId = this.route.snapshot.paramMap.get('flowId');\n    http.get(apiUrl + `job/${flowId}`).subscribe(result => {\n      this.job = result;\n    });\n  }\n  updateEvidence(evidence, value) {\n    console.log(evidence, value);\n    evidence.value = value;\n  }\n  doTransition(transition) {\n    console.log(transition);\n    if (!transition.isEnd) {\n      this.jobStepIndex++;\n      console.log(this.jobStepIndex);\n    } else {\n      this.router.navigate(['/flows']);\n    }\n  }\n};\nJobComponent = __decorate([Component({\n  selector: 'app-job',\n  templateUrl: './job.component.html',\n  styleUrls: ['./job.component.css']\n}), __param(1, Inject('API_URL'))], JobComponent);\nexport { JobComponent };","map":{"version":3,"names":["Component","Inject","JobComponent","constructor","http","apiUrl","router","route","jobStepIndex","flowId","snapshot","paramMap","get","subscribe","result","job","updateEvidence","evidence","value","console","log","doTransition","transition","isEnd","navigate","__decorate","selector","templateUrl","styleUrls","__param"],"sources":["C:\\dev\\sudosky\\Centricity\\FrontEnd\\ClientApp\\src\\app\\job\\job.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { empty } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-job',\r\n  templateUrl: './job.component.html',\r\n  styleUrls: ['./job.component.css']\r\n})\r\nexport class JobComponent {\r\n\r\n  public job: any;\r\n  public jobStepIndex: number = 0;\r\n\r\n  constructor(http: HttpClient, @Inject('API_URL') apiUrl: string, private router: Router, private route: ActivatedRoute) {\r\n    \r\n    var flowId = this.route.snapshot.paramMap.get('flowId');\r\n\r\n    http.get(apiUrl + `job/${flowId}`).subscribe(result => {\r\n      this.job = result;      \r\n    })  \r\n  }\r\n\r\n  public updateEvidence(evidence: any, value: any) {\r\n    console.log(evidence, value);\r\n    evidence.value = value;\r\n  }\r\n\r\n  public doTransition(transition: any) {\r\n    console.log(transition);\r\n    if (!transition.isEnd) {\r\n      this.jobStepIndex++;\r\n      console.log(this.jobStepIndex);\r\n    }\r\n    else {\r\n      this.router.navigate(['/flows']);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAW1C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAKvBC,YAAYC,IAAgB,EAAqBC,MAAc,EAAUC,MAAc,EAAUC,KAAqB;IAA7C,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IAF/F,KAAAC,YAAY,GAAW,CAAC;IAI7B,IAAIC,MAAM,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,QAAQ,CAAC;IAEvDR,IAAI,CAACQ,GAAG,CAACP,MAAM,GAAG,OAAOI,MAAM,EAAE,CAAC,CAACI,SAAS,CAACC,MAAM,IAAG;MACpD,IAAI,CAACC,GAAG,GAAGD,MAAM;IACnB,CAAC,CAAC;EACJ;EAEOE,cAAcA,CAACC,QAAa,EAAEC,KAAU;IAC7CC,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAEC,KAAK,CAAC;IAC5BD,QAAQ,CAACC,KAAK,GAAGA,KAAK;EACxB;EAEOG,YAAYA,CAACC,UAAe;IACjCH,OAAO,CAACC,GAAG,CAACE,UAAU,CAAC;IACvB,IAAI,CAACA,UAAU,CAACC,KAAK,EAAE;MACrB,IAAI,CAACf,YAAY,EAAE;MACnBW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,YAAY,CAAC;KAC/B,MACI;MACH,IAAI,CAACF,MAAM,CAACkB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;EAEpC;CAED;AA9BYtB,YAAY,GAAAuB,UAAA,EALxBzB,SAAS,CAAC;EACT0B,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,EAM+BC,OAAA,IAAA5B,MAAM,CAAC,SAAS,CAAC,E,EALrCC,YAAY,CA8BxB;SA9BYA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}