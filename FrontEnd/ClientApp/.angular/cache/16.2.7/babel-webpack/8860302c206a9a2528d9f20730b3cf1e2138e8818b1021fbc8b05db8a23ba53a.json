{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction JobComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Loading Job...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class JobComponent {\n  constructor(http, apiUrl, router, route) {\n    this.router = router;\n    this.route = route;\n    var flowId = this.route.snapshot.paramMap.get('flowId');\n    http.get(apiUrl + `job/${flowId}`).subscribe(result => {\n      this.job = result;\n    });\n    /*http.get<Job>(apiUrl + `job/${flowId}`).subscribe(result => {\r\n      this.job = result;\r\n    }, error => console.error(error));*/\n  }\n  static #_ = this.ɵfac = function JobComponent_Factory(t) {\n    return new (t || JobComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('API_URL'), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JobComponent,\n    selectors: [[\"app-job\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\"]],\n    template: function JobComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, JobComponent_p_0_Template, 2, 0, \"p\", 0);\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !(ctx.job == null ? null : ctx.job.id));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.job.flow.name, \" \");\n      }\n    },\n    dependencies: [i3.NgIf],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","JobComponent","constructor","http","apiUrl","router","route","flowId","snapshot","paramMap","get","subscribe","result","job","_","ɵɵdirectiveInject","i1","HttpClient","i2","Router","ActivatedRoute","_2","selectors","decls","vars","consts","template","JobComponent_Template","rf","ctx","ɵɵtemplate","JobComponent_p_0_Template","ɵɵproperty","id","ɵɵadvance","ɵɵtextInterpolate1","flow","name"],"sources":["C:\\dev\\sudosky\\Centricity\\FrontEnd\\ClientApp\\src\\app\\job\\job.component.ts","C:\\dev\\sudosky\\Centricity\\FrontEnd\\ClientApp\\src\\app\\job\\job.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { empty } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-job',\r\n  templateUrl: './job.component.html'\r\n})\r\nexport class JobComponent {\r\n\r\n  public job : any;\r\n\r\n  constructor(http: HttpClient, @Inject('API_URL') apiUrl: string, private router: Router, private route: ActivatedRoute) {\r\n\r\n    var flowId = this.route.snapshot.paramMap.get('flowId');\r\n    http.get(apiUrl + `job/${flowId}`).subscribe(result => {\r\n      this.job = result;\r\n    })\r\n    /*http.get<Job>(apiUrl + `job/${flowId}`).subscribe(result => {\r\n      this.job = result;\r\n    }, error => console.error(error));*/\r\n  }\r\n}\r\n\r\n/*interface Job {\r\n  id: number,\r\n  flow: object,\r\n  jobSteps: object\r\n}*/\r\n","<p *ngIf=\"!job?.id\">Loading Job...</p>\r\n\r\n<h1>{{ job.flow.name }} </h1>\r\n"],"mappings":";;;;;;ICAAA,EAAA,CAAAC,cAAA,QAAoB;IAAAD,EAAA,CAAAE,MAAA,qBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;ADUtC,OAAM,MAAOC,YAAY;EAIvBC,YAAYC,IAAgB,EAAqBC,MAAc,EAAUC,MAAc,EAAUC,KAAqB;IAA7C,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IAEpG,IAAIC,MAAM,GAAG,IAAI,CAACD,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvDP,IAAI,CAACO,GAAG,CAACN,MAAM,GAAG,OAAOG,MAAM,EAAE,CAAC,CAACI,SAAS,CAACC,MAAM,IAAG;MACpD,IAAI,CAACC,GAAG,GAAGD,MAAM;IACnB,CAAC,CAAC;IACF;;;EAGF;EAAC,QAAAE,CAAA,G;qBAbUb,YAAY,EAAAJ,EAAA,CAAAkB,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAApB,EAAA,CAAAkB,iBAAA,CAIe,SAAS,GAAAlB,EAAA,CAAAkB,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAtB,EAAA,CAAAkB,iBAAA,CAAAG,EAAA,CAAAE,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAJpCpB,YAAY;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVzB/B,EAAA,CAAAiC,UAAA,IAAAC,yBAAA,eAAsC;QAEtClC,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,GAAoB;QAAAF,EAAA,CAAAG,YAAA,EAAK;;;QAFzBH,EAAA,CAAAmC,UAAA,WAAAH,GAAA,CAAAhB,GAAA,kBAAAgB,GAAA,CAAAhB,GAAA,CAAAoB,EAAA,EAAc;QAEdpC,EAAA,CAAAqC,SAAA,GAAoB;QAApBrC,EAAA,CAAAsC,kBAAA,KAAAN,GAAA,CAAAhB,GAAA,CAAAuB,IAAA,CAAAC,IAAA,MAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}