{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction FlowsComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function () {\n  return [\"/job/{{ flow.id}}\"];\n};\nfunction FlowsComponent_table_3_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"a\", 5);\n    i0.ɵɵtext(7, \"Execute\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const flow_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(flow_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(flow_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n  }\n}\nfunction FlowsComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"th\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"tbody\");\n    i0.ɵɵtemplate(9, FlowsComponent_table_3_tr_9_Template, 8, 4, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.flows);\n  }\n}\nexport class FlowsComponent {\n  constructor(http, apiUrl, router) {\n    this.router = router;\n    this.flows = [];\n    http.get(apiUrl + 'flows').subscribe(result => {\n      this.flows = result;\n    }, error => console.error(error));\n  }\n  executeFlow(flowId) {\n    this.router.navigate(['job', flowId]);\n  }\n  static #_ = this.ɵfac = function FlowsComponent_Factory(t) {\n    return new (t || FlowsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('API_URL'), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FlowsComponent,\n    selectors: [[\"app-flows\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"nav-link\", \"text-dark\", 3, \"routerLink\"]],\n    template: function FlowsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Flows\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, FlowsComponent_p_2_Template, 3, 0, \"p\", 1);\n        i0.ɵɵtemplate(3, FlowsComponent_table_3_Template, 10, 1, \"table\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.flows == null ? null : ctx.flows.length));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.flows.length);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","flow_r3","id","name","ɵɵproperty","ɵɵpureFunction0","_c0","ɵɵelement","ɵɵtemplate","FlowsComponent_table_3_tr_9_Template","ctx_r1","flows","FlowsComponent","constructor","http","apiUrl","router","get","subscribe","result","error","console","executeFlow","flowId","navigate","_","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","FlowsComponent_Template","rf","ctx","FlowsComponent_p_2_Template","FlowsComponent_table_3_Template","length"],"sources":["C:\\dev\\sudosky\\Centricity\\FrontEnd\\ClientApp\\src\\app\\flows\\flows.component.ts","C:\\dev\\sudosky\\Centricity\\FrontEnd\\ClientApp\\src\\app\\flows\\flows.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-flows',\r\n  templateUrl: './flows.component.html'\r\n})\r\nexport class FlowsComponent {\r\n\r\n  public flows: Flow[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('API_URL') apiUrl: string, private router: Router) {\r\n    http.get<Flow[]>(apiUrl + 'flows').subscribe(result => {\r\n      this.flows = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public executeFlow(flowId: number) {\r\n    this.router.navigate(['job', flowId]);\r\n  }\r\n}\r\n\r\ninterface Flow {\r\n  id: number,\r\n  name: string\r\n}\r\n","<h1 id=\"tableLabel\">Flows</h1>\r\n\r\n<p *ngIf=\"!flows?.length\"><em>Loading...</em></p>\r\n\r\n<table class=\"table table-striped\" aria-labelledby=\"tableLabel\" *ngIf=\"flows.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let flow of flows\">\r\n      <td>{{ flow.id }}</td>\r\n      <td>{{ flow.name }}</td>\r\n      <td><a class=\"nav-link text-dark\" [routerLink]=\"['/job/{{ flow.id}}']\">Execute</a></td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}