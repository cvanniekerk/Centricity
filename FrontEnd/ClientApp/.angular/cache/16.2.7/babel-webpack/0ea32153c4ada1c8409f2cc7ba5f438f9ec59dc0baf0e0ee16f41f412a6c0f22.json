{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction EvidenceComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"input\", 1);\n    i0.ɵɵlistener(\"keyup\", function EvidenceComponent_div_0_Template_input_keyup_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateText($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.evidence.name);\n  }\n}\nfunction EvidenceComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"input\", 2);\n    i0.ɵɵlistener(\"change\", function EvidenceComponent_div_1_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateCheckbox($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.evidence.name);\n  }\n}\nexport class EvidenceComponent {\n  constructor() {\n    this.updated = new EventEmitter();\n  }\n  updateText(event) {\n    this.evidence.value = event.target.value;\n    this.updated.emit(this.evidence);\n  }\n  updateCheckbox(event) {\n    this.evidence.value = event.target.checked;\n    this.updated.emit(this.evidence);\n  }\n  static #_ = this.ɵfac = function EvidenceComponent_Factory(t) {\n    return new (t || EvidenceComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EvidenceComponent,\n    selectors: [[\"app-evidence\"]],\n    inputs: {\n      evidence: \"evidence\"\n    },\n    outputs: {\n      updated: \"updated\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"type\", \"text\", 3, \"keyup\"], [\"type\", \"checkbox\", 3, \"change\"]],\n    template: function EvidenceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EvidenceComponent_div_0_Template, 5, 1, \"div\", 0);\n        i0.ɵɵtemplate(1, EvidenceComponent_div_1_Template, 5, 1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.evidence.evidenceType == 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.evidence.evidenceType == 2);\n      }\n    },\n    dependencies: [i1.NgIf],\n    styles: [\".step[_ngcontent-%COMP%] {\\r\\n  border: 1px solid black;\\r\\n  border-radius: 4px;\\r\\n  padding: 5px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.evidence[_ngcontent-%COMP%] {\\r\\n  border: 1px solid black;\\r\\n  border-radius: 4px;\\r\\n  padding: 5px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXZpZGVuY2UvZXZpZGVuY2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi5zdGVwIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgcGFkZGluZzogNXB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5ldmlkZW5jZSB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIHBhZGRpbmc6IDVweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EvidenceComponent_div_0_Template_input_keyup_4_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","updateText","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","evidence","name","EvidenceComponent_div_1_Template_input_change_4_listener","_r5","ctx_r4","updateCheckbox","ctx_r1","EvidenceComponent","constructor","updated","event","value","target","emit","checked","_","_2","selectors","inputs","outputs","decls","vars","consts","template","EvidenceComponent_Template","rf","ctx","ɵɵtemplate","EvidenceComponent_div_0_Template","EvidenceComponent_div_1_Template","ɵɵproperty","evidenceType"],"sources":["C:\\dev\\sudosky\\Centricity\\FrontEnd\\ClientApp\\src\\app\\evidence\\evidence.component.ts","C:\\dev\\sudosky\\Centricity\\FrontEnd\\ClientApp\\src\\app\\evidence\\evidence.component.html"],"sourcesContent":["import { Component, Input, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-evidence',\r\n  templateUrl: './evidence.component.html',\r\n  styleUrls: ['./evidence.component.css']\r\n})\r\nexport class EvidenceComponent {\r\n\r\n  @Input('evidence') evidence: any;  \r\n  @Output() updated = new EventEmitter();\r\n\r\n  updateText(event: any) {\r\n    this.evidence.value = event.target.value;\r\n    this.updated.emit(this.evidence);\r\n  }\r\n\r\n  updateCheckbox(event: any) {\r\n    this.evidence.value = event.target.checked;    \r\n    this.updated.emit(this.evidence);\r\n  }\r\n}\r\n\r\n\r\n\r\n","<div *ngIf=\"evidence.evidenceType == 1\">\r\n  <div>{{ evidence.name }}</div>\r\n  <div>\r\n    <input type=\"text\" (keyup)=\"updateText($event)\" />\r\n  </div>\r\n</div>\r\n<div *ngIf=\"evidence.evidenceType == 2\">\r\n  <div>{{ evidence.name }}</div>\r\n  <div>\r\n    <input type=\"checkbox\" (change)=\"updateCheckbox($event)\" />\r\n  </div>\r\n</div>\r\n"],"mappings":"AAAA,SAA2BA,YAAY,QAAgB,eAAe;;;;;;ICAtEC,EAAA,CAAAC,cAAA,UAAwC;IACjCD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAC9BH,EAAA,CAAAC,cAAA,UAAK;IACgBD,EAAA,CAAAI,UAAA,mBAAAC,wDAAAC,MAAA;MAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,UAAA,CAAAN,MAAA,CAAkB;IAAA,EAAC;IAA/CN,EAAA,CAAAG,YAAA,EAAkD;;;;IAF/CH,EAAA,CAAAa,SAAA,GAAmB;IAAnBb,EAAA,CAAAc,iBAAA,CAAAC,MAAA,CAAAC,QAAA,CAAAC,IAAA,CAAmB;;;;;;IAK1BjB,EAAA,CAAAC,cAAA,UAAwC;IACjCD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAC9BH,EAAA,CAAAC,cAAA,UAAK;IACoBD,EAAA,CAAAI,UAAA,oBAAAc,yDAAAZ,MAAA;MAAAN,EAAA,CAAAO,aAAA,CAAAY,GAAA;MAAA,MAAAC,MAAA,GAAApB,EAAA,CAAAU,aAAA;MAAA,OAAUV,EAAA,CAAAW,WAAA,CAAAS,MAAA,CAAAC,cAAA,CAAAf,MAAA,CAAsB;IAAA,EAAC;IAAxDN,EAAA,CAAAG,YAAA,EAA2D;;;;IAFxDH,EAAA,CAAAa,SAAA,GAAmB;IAAnBb,EAAA,CAAAc,iBAAA,CAAAQ,MAAA,CAAAN,QAAA,CAAAC,IAAA,CAAmB;;;ADA1B,OAAM,MAAOM,iBAAiB;EAL9BC,YAAA;IAQY,KAAAC,OAAO,GAAG,IAAI1B,YAAY,EAAE;;EAEtCa,UAAUA,CAACc,KAAU;IACnB,IAAI,CAACV,QAAQ,CAACW,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IACxC,IAAI,CAACF,OAAO,CAACI,IAAI,CAAC,IAAI,CAACb,QAAQ,CAAC;EAClC;EAEAK,cAAcA,CAACK,KAAU;IACvB,IAAI,CAACV,QAAQ,CAACW,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACE,OAAO;IAC1C,IAAI,CAACL,OAAO,CAACI,IAAI,CAAC,IAAI,CAACb,QAAQ,CAAC;EAClC;EAAC,QAAAe,CAAA,G;qBAbUR,iBAAiB;EAAA;EAAA,QAAAS,EAAA,G;UAAjBT,iBAAiB;IAAAU,SAAA;IAAAC,MAAA;MAAAlB,QAAA;IAAA;IAAAmB,OAAA;MAAAV,OAAA;IAAA;IAAAW,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP9BzC,EAAA,CAAA2C,UAAA,IAAAC,gCAAA,iBAKM;QACN5C,EAAA,CAAA2C,UAAA,IAAAE,gCAAA,iBAKM;;;QAXA7C,EAAA,CAAA8C,UAAA,SAAAJ,GAAA,CAAA1B,QAAA,CAAA+B,YAAA,MAAgC;QAMhC/C,EAAA,CAAAa,SAAA,GAAgC;QAAhCb,EAAA,CAAA8C,UAAA,SAAAJ,GAAA,CAAA1B,QAAA,CAAA+B,YAAA,MAAgC"},"metadata":{},"sourceType":"module","externalDependencies":[]}